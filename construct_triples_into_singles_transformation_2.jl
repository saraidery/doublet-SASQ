include("../TensorOperation-eT-code/src/omeinsum_impl.jl")
open("construct_triples_into_singles_transformation_2.F90", "w") do io
s = let
    func = FortranFunction(("rho_ai", ["v", "o"]))
    F_vo = ("wf%fock_ai", false)
    rAIAI = ("rAIAI", true)
    FAI = ("FAI", true)
    rAIxx_vo = ("rAIxx_vo", true)
    rAxxI_ov = ("rAxxI_ov", true)
    FAx_o = ("FAx_o", true)
    rAIxI_v = ("rAIxI_v", true)
    FxI_v = ("FxI_v", true)
    rAIAx_o = ("rAIAx_o", true)
    LAIxx_vv = ("LAIxx_vv", true)
    LAIxx_oo = ("LAIxx_oo", true)
    LAxxx_vvo = ("LAxxx_vvo", true)
    LxxxI_voo = ("LxxxI_voo", true)
    gAIAx_v = ("gAIAx_v", true)
    rxIxx_vvo = ("rxIxx_vvo", true)
    rxxxI_vov = ("rxxxI_vov", true)
    gAIxI_o = ("gAIxI_o", true)
    rAxxx_ovo = ("rAxxx_ovo", true)
    gAIxx_vv = ("gAIxx_vv", true)
    gAIxx_oo = ("gAIxx_oo", true)
    gAxAx_ov = ("gAxAx_ov", true)
    rxIxI_vv = ("rxIxI_vv", true)
    gAxxI_oo = ("gAxxI_oo", true)
    gAxxI_vv = ("gAxxI_vv", true)
    gxIxI_vo = ("gxIxI_vo", true)
    rAxAx_oo = ("rAxAx_oo", true)
    F_ov = ("wf%fock_ia", false)
    u_vovo = ("u_aibj", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    uxIxx_vvo = ("uxIxx_vvo", true)
    uxxxI_vov = ("uxxxI_vov", true)
    uAxxx_ovo = ("uAxxx_ovo", true)
    uAIxx_vo = ("uAIxx_vo", true)
    txIxI_vv = ("txIxI_vv", true)
    tAIxx_vo = ("tAIxx_vo", true)
    tAxxI_ov = ("tAxxI_ov", true)
    tAIxI_v = ("tAIxI_v", true)
    tAxAx_oo = ("tAxAx_oo", true)
    tAIAx_o = ("tAIAx_o", true)
    L_vvov = ("L_vvov", true)
    L_ooov = ("L_ooov", true)
    LAxxx_vov = ("LAxxx_vov", true)
    r_vovo = ("r_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    LxIxx_oov = ("LxIxx_oov", true)
    g_vvov = ("g_vvov", true)
    g_ooov = ("g_ooov", true)
    gAxxx_vov = ("gAxxx_vov", true)
    txIxx_vvo = ("txIxx_vvo", true)
    txxxI_vov = ("txxxI_vov", true)
    tAxxx_ovo = ("tAxxx_ovo", true)
    gxIxx_oov = ("gxIxx_oov", true)
    update_code!(func, ein"bj,->bj", 1//1, [F_vo, rAIAI])
    update_code!(func, ein",bj->bj", 2//1, [FAI, rAIxx_vo])
    update_code!(func, ein",jb->bj", -1//1, [FAI, rAxxI_ov])
    update_code!(func, ein"j,b->bj", -1//1, [FAx_o, rAIxI_v])
    update_code!(func, ein"b,j->bj", -1//1, [FxI_v, rAIAx_o])
    update_code!(func, ein"bc,cj->bj", 1//1, [LAIxx_vv, rAIxx_vo])
    update_code!(func, ein"kj,bk->bj", -1//1, [LAIxx_oo, rAIxx_vo])
    update_code!(func, ein"cbj,c->bj", 1//1, [LAxxx_vvo, rAIxI_v])
    update_code!(func, ein"bjk,k->bj", -1//1, [LxxxI_voo, rAIAx_o])
    update_code!(func, ein"c,bcj->bj", -1//1, [gAIAx_v, rxIxx_vvo])
    update_code!(func, ein"c,bjc->bj", 2//1, [gAIAx_v, rxxxI_vov])
    update_code!(func, ein"k,jbk->bj", 1//1, [gAIxI_o, rAxxx_ovo])
    update_code!(func, ein"k,kbj->bj", -2//1, [gAIxI_o, rAxxx_ovo])
    update_code!(func, ein"bc,jc->bj", -1//1, [gAIxx_vv, rAxxI_ov])
    update_code!(func, ein"kj,kb->bj", 1//1, [gAIxx_oo, rAxxI_ov])
    update_code!(func, ein"jc,bc->bj", -1//1, [gAxAx_ov, rxIxI_vv])
    update_code!(func, ein"jk,kb->bj", 1//1, [gAxxI_oo, rAxxI_ov])
    update_code!(func, ein"cb,jc->bj", -1//1, [gAxxI_vv, rAxxI_ov])
    update_code!(func, ein"bk,jk->bj", 1//1, [gxIxI_vo, rAxAx_oo])
    update_code!(func, ein"kc,,bjck->bj", 1//1, [F_ov, rAIAI, u_vovo])
    update_code!(func, ein"kc,j,bck->bj", -1//1, [F_ov, rAIAx_o, uxIxx_vvo])
    update_code!(func, ein"kc,k,bjc->bj", -1//1, [F_ov, rAIAx_o, uxxxI_vov])
    update_code!(func, ein"kc,b,jck->bj", -1//1, [F_ov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"kc,c,kbj->bj", -1//1, [F_ov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"kc,bj,ck->bj", 2//1, [F_ov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"kc,bk,cj->bj", -1//1, [F_ov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"kc,cj,bk->bj", -1//1, [F_ov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"kc,jk,bc->bj", 1//1, [F_ov, rAxAx_oo, txIxI_vv])
    update_code!(func, ein"kc,jc,bk->bj", 1//1, [F_ov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"kc,kb,cj->bj", 1//1, [F_ov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"kc,jc,kb->bj", 1//1, [F_ov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"kc,kb,jc->bj", 1//1, [F_ov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"kc,jb,ck->bj", -1//1, [F_ov, rAxxI_ov, uAIxx_vo])
    update_code!(func, ein"kc,jbk,c->bj", 1//1, [F_ov, rAxxx_ovo, tAIxI_v])
    update_code!(func, ein"kc,kbj,c->bj", -2//1, [F_ov, rAxxx_ovo, tAIxI_v])
    update_code!(func, ein"kc,bc,jk->bj", 1//1, [F_ov, rxIxI_vv, tAxAx_oo])
    update_code!(func, ein"kc,bcj,k->bj", 1//1, [F_ov, rxIxx_vvo, tAIAx_o])
    update_code!(func, ein"kc,bjc,k->bj", -2//1, [F_ov, rxxxI_vov, tAIAx_o])
    update_code!(func, ein"bckd,cj,dk->bj", 1//1, [L_vvov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"bckd,dk,cj->bj", 1//1, [L_vvov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"kjlc,bk,cl->bj", -1//1, [L_ooov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"kjlc,cl,bk->bj", -1//1, [L_ooov, rAIxx_vo, uAIxx_vo])
    update_code!(func, ein"bckd,jdk,c->bj", -1//1, [L_vvov, rAxxx_ovo, tAIxI_v])
    update_code!(func, ein"bckd,kcj,d->bj", -1//1, [L_vvov, rAxxx_ovo, tAIxI_v])
    update_code!(func, ein"kjlc,lbk,c->bj", 1//1, [L_ooov, rAxxx_ovo, tAIxI_v])
    update_code!(func, ein"kjlc,bcl,k->bj", 1//1, [L_ooov, rxIxx_vvo, tAIAx_o])
    update_code!(func, ein"bckd,cjd,k->bj", -1//1, [L_vvov, rxxxI_vov, tAIAx_o])
    update_code!(func, ein"kjlc,bkc,l->bj", 1//1, [L_ooov, rxxxI_vov, tAIAx_o])
    update_code!(func, ein"ckd,bjdk,c->bj", 2//1, [LAxxx_vov, r_vovo, tAIxI_v])
    update_code!(func, ein"ckd,bkdj,c->bj", -1//1, [LAxxx_vov, r_vovo, tAIxI_v])
    update_code!(func, ein"ckd,c,bjdk->bj", 1//1, [LAxxx_vov, rAIxI_v, u_vovo])
    update_code!(func, ein"ckd,dk,bjc->bj", 1//1, [LAxxx_vov, rAIxx_vo, uxxxI_vov])
    update_code!(func, ein"ckd,jdk,bc->bj", -1//1, [LAxxx_vov, rAxxx_ovo, txIxI_vv])
    update_code!(func, ein"ckd,bdk,cj->bj", -1//1, [LAxxx_vov, rxIxx_vvo, tAIxx_vo])
    update_code!(func, ein"ckd,bdk,jc->bj", -1//1, [LAxxx_vov, rxIxx_vvo, tAxxI_ov])
    update_code!(func, ein"klc,bjcl,k->bj", -2//1, [LxIxx_oov, r_vovo, tAIAx_o])
    update_code!(func, ein"klc,blcj,k->bj", 1//1, [LxIxx_oov, r_vovo, tAIAx_o])
    update_code!(func, ein"klc,k,bjcl->bj", -1//1, [LxIxx_oov, rAIAx_o, u_vovo])
    update_code!(func, ein"klc,cl,kbj->bj", -1//1, [LxIxx_oov, rAIxx_vo, uAxxx_ovo])
    update_code!(func, ein"klc,jcl,bk->bj", 1//1, [LxIxx_oov, rAxxx_ovo, tAIxx_vo])
    update_code!(func, ein"klc,jcl,kb->bj", 1//1, [LxIxx_oov, rAxxx_ovo, tAxxI_ov])
    update_code!(func, ein"klc,bcl,jk->bj", 1//1, [LxIxx_oov, rxIxx_vvo, tAxAx_oo])
    update_code!(func, ein"bckd,,cjdk->bj", 1//1, [g_vvov, rAIAI, u_vovo])
    update_code!(func, ein"kjlc,,bkcl->bj", -1//1, [g_ooov, rAIAI, u_vovo])
    update_code!(func, ein"bckd,j,cdk->bj", -1//1, [g_vvov, rAIAx_o, uxIxx_vvo])
    update_code!(func, ein"kjlc,k,bcl->bj", 1//1, [g_ooov, rAIAx_o, uxIxx_vvo])
    update_code!(func, ein"bckd,k,cjd->bj", -1//1, [g_vvov, rAIAx_o, uxxxI_vov])
    update_code!(func, ein"kjlc,l,bkc->bj", 1//1, [g_ooov, rAIAx_o, uxxxI_vov])
    update_code!(func, ein"bckd,c,jdk->bj", -1//1, [g_vvov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"bckd,d,kcj->bj", -1//1, [g_vvov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"kjlc,b,kcl->bj", 1//1, [g_ooov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"kjlc,c,lbk->bj", 1//1, [g_ooov, rAIxI_v, uAxxx_ovo])
    update_code!(func, ein"bckd,jk,cd->bj", 1//1, [g_vvov, rAxAx_oo, txIxI_vv])
    update_code!(func, ein"kjlc,kl,bc->bj", -1//1, [g_ooov, rAxAx_oo, txIxI_vv])
    update_code!(func, ein"bckd,jd,ck->bj", 1//1, [g_vvov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"bckd,kc,dj->bj", 1//1, [g_vvov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"kjlc,kc,bl->bj", -1//1, [g_ooov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"kjlc,lb,ck->bj", -1//1, [g_ooov, rAxxI_ov, tAIxx_vo])
    update_code!(func, ein"bckd,jd,kc->bj", 1//1, [g_vvov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"bckd,kc,jd->bj", 1//1, [g_vvov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"kjlc,kc,lb->bj", -1//1, [g_ooov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"kjlc,lb,kc->bj", -1//1, [g_ooov, rAxxI_ov, tAxxI_ov])
    update_code!(func, ein"bckd,jc,dk->bj", -1//1, [g_vvov, rAxxI_ov, uAIxx_vo])
    update_code!(func, ein"bckd,kd,cj->bj", -1//1, [g_vvov, rAxxI_ov, uAIxx_vo])
    update_code!(func, ein"kjlc,kb,cl->bj", 1//1, [g_ooov, rAxxI_ov, uAIxx_vo])
    update_code!(func, ein"kjlc,lc,bk->bj", 1//1, [g_ooov, rAxxI_ov, uAIxx_vo])
    update_code!(func, ein"bckd,cd,jk->bj", 1//1, [g_vvov, rxIxI_vv, tAxAx_oo])
    update_code!(func, ein"kjlc,bc,kl->bj", -1//1, [g_ooov, rxIxI_vv, tAxAx_oo])
    update_code!(func, ein"ckd,b,cjdk->bj", -1//1, [gAxxx_vov, rAIxI_v, u_vovo])
    update_code!(func, ein"ckd,bj,cdk->bj", 2//1, [gAxxx_vov, rAIxx_vo, uxIxx_vvo])
    update_code!(func, ein"ckd,bk,cdj->bj", -1//1, [gAxxx_vov, rAIxx_vo, uxIxx_vvo])
    update_code!(func, ein"ckd,cj,bdk->bj", -1//1, [gAxxx_vov, rAIxx_vo, uxIxx_vvo])
    update_code!(func, ein"ckd,dj,bkc->bj", -1//1, [gAxxx_vov, rAIxx_vo, uxxxI_vov])
    update_code!(func, ein"ckd,jd,bck->bj", 1//1, [gAxxx_vov, rAxxI_ov, txIxx_vvo])
    update_code!(func, ein"ckd,kb,cdj->bj", 1//1, [gAxxx_vov, rAxxI_ov, txIxx_vvo])
    update_code!(func, ein"ckd,jd,bkc->bj", 1//1, [gAxxx_vov, rAxxI_ov, txxxI_vov])
    update_code!(func, ein"ckd,kb,cjd->bj", 1//1, [gAxxx_vov, rAxxI_ov, txxxI_vov])
    update_code!(func, ein"ckd,jb,cdk->bj", -1//1, [gAxxx_vov, rAxxI_ov, uxIxx_vvo])
    update_code!(func, ein"ckd,jc,bdk->bj", -1//1, [gAxxx_vov, rAxxI_ov, uxIxx_vvo])
    update_code!(func, ein"ckd,kc,bjd->bj", -1//1, [gAxxx_vov, rAxxI_ov, uxxxI_vov])
    update_code!(func, ein"ckd,kd,bjc->bj", -1//1, [gAxxx_vov, rAxxI_ov, uxxxI_vov])
    update_code!(func, ein"ckd,jbk,cd->bj", 1//1, [gAxxx_vov, rAxxx_ovo, txIxI_vv])
    update_code!(func, ein"ckd,kbj,cd->bj", -2//1, [gAxxx_vov, rAxxx_ovo, txIxI_vv])
    update_code!(func, ein"ckd,kcj,bd->bj", 1//1, [gAxxx_vov, rAxxx_ovo, txIxI_vv])
    update_code!(func, ein"ckd,kdj,bc->bj", 1//1, [gAxxx_vov, rAxxx_ovo, txIxI_vv])
    update_code!(func, ein"ckd,bd,jck->bj", 1//1, [gAxxx_vov, rxIxI_vv, tAxxx_ovo])
    update_code!(func, ein"ckd,bd,kcj->bj", 1//1, [gAxxx_vov, rxIxI_vv, tAxxx_ovo])
    update_code!(func, ein"ckd,bc,jdk->bj", -1//1, [gAxxx_vov, rxIxI_vv, uAxxx_ovo])
    update_code!(func, ein"ckd,cd,kbj->bj", -1//1, [gAxxx_vov, rxIxI_vv, uAxxx_ovo])
    update_code!(func, ein"ckd,bdj,ck->bj", 1//1, [gAxxx_vov, rxIxx_vvo, tAIxx_vo])
    update_code!(func, ein"ckd,bdj,kc->bj", 1//1, [gAxxx_vov, rxIxx_vvo, tAxxI_ov])
    update_code!(func, ein"ckd,bcj,dk->bj", -1//1, [gAxxx_vov, rxIxx_vvo, uAIxx_vo])
    update_code!(func, ein"ckd,cdj,bk->bj", -1//1, [gAxxx_vov, rxIxx_vvo, uAIxx_vo])
    update_code!(func, ein"ckd,bjd,ck->bj", -2//1, [gAxxx_vov, rxxxI_vov, tAIxx_vo])
    update_code!(func, ein"ckd,bkd,cj->bj", 1//1, [gAxxx_vov, rxxxI_vov, tAIxx_vo])
    update_code!(func, ein"ckd,cjd,bk->bj", 1//1, [gAxxx_vov, rxxxI_vov, tAIxx_vo])
    update_code!(func, ein"ckd,bjd,kc->bj", -2//1, [gAxxx_vov, rxxxI_vov, tAxxI_ov])
    update_code!(func, ein"ckd,bkd,jc->bj", 1//1, [gAxxx_vov, rxxxI_vov, tAxxI_ov])
    update_code!(func, ein"ckd,cjd,kb->bj", 1//1, [gAxxx_vov, rxxxI_vov, tAxxI_ov])
    update_code!(func, ein"ckd,bjc,dk->bj", 2//1, [gAxxx_vov, rxxxI_vov, uAIxx_vo])
    update_code!(func, ein"ckd,bkc,dj->bj", -1//1, [gAxxx_vov, rxxxI_vov, uAIxx_vo])
    update_code!(func, ein"klc,j,bkcl->bj", 1//1, [gxIxx_oov, rAIAx_o, u_vovo])
    update_code!(func, ein"klc,bj,kcl->bj", -2//1, [gxIxx_oov, rAIxx_vo, uAxxx_ovo])
    update_code!(func, ein"klc,bk,jcl->bj", 1//1, [gxIxx_oov, rAIxx_vo, uAxxx_ovo])
    update_code!(func, ein"klc,bl,kcj->bj", 1//1, [gxIxx_oov, rAIxx_vo, uAxxx_ovo])
    update_code!(func, ein"klc,cj,kbl->bj", 1//1, [gxIxx_oov, rAIxx_vo, uAxxx_ovo])
    update_code!(func, ein"klc,jl,bck->bj", -1//1, [gxIxx_oov, rAxAx_oo, txIxx_vvo])
    update_code!(func, ein"klc,jl,bkc->bj", -1//1, [gxIxx_oov, rAxAx_oo, txxxI_vov])
    update_code!(func, ein"klc,jk,bcl->bj", 1//1, [gxIxx_oov, rAxAx_oo, uxIxx_vvo])
    update_code!(func, ein"klc,kl,bjc->bj", 1//1, [gxIxx_oov, rAxAx_oo, uxxxI_vov])
    update_code!(func, ein"klc,jc,kbl->bj", -1//1, [gxIxx_oov, rAxxI_ov, tAxxx_ovo])
    update_code!(func, ein"klc,jc,lbk->bj", -1//1, [gxIxx_oov, rAxxI_ov, tAxxx_ovo])
    update_code!(func, ein"klc,lb,jck->bj", -1//1, [gxIxx_oov, rAxxI_ov, tAxxx_ovo])
    update_code!(func, ein"klc,lb,kcj->bj", -1//1, [gxIxx_oov, rAxxI_ov, tAxxx_ovo])
    update_code!(func, ein"klc,jb,kcl->bj", 1//1, [gxIxx_oov, rAxxI_ov, uAxxx_ovo])
    update_code!(func, ein"klc,kb,jcl->bj", 1//1, [gxIxx_oov, rAxxI_ov, uAxxx_ovo])
    update_code!(func, ein"klc,kc,lbj->bj", 1//1, [gxIxx_oov, rAxxI_ov, uAxxx_ovo])
    update_code!(func, ein"klc,lc,kbj->bj", 1//1, [gxIxx_oov, rAxxI_ov, uAxxx_ovo])
    update_code!(func, ein"klc,jbl,ck->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAIxx_vo])
    update_code!(func, ein"klc,lbj,ck->bj", 2//1, [gxIxx_oov, rAxxx_ovo, tAIxx_vo])
    update_code!(func, ein"klc,lbk,cj->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAIxx_vo])
    update_code!(func, ein"klc,lcj,bk->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAIxx_vo])
    update_code!(func, ein"klc,jbl,kc->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAxxI_ov])
    update_code!(func, ein"klc,lbj,kc->bj", 2//1, [gxIxx_oov, rAxxx_ovo, tAxxI_ov])
    update_code!(func, ein"klc,lbk,jc->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAxxI_ov])
    update_code!(func, ein"klc,lcj,kb->bj", -1//1, [gxIxx_oov, rAxxx_ovo, tAxxI_ov])
    update_code!(func, ein"klc,jbk,cl->bj", 1//1, [gxIxx_oov, rAxxx_ovo, uAIxx_vo])
    update_code!(func, ein"klc,kbj,cl->bj", -2//1, [gxIxx_oov, rAxxx_ovo, uAIxx_vo])
    update_code!(func, ein"klc,kbl,cj->bj", 1//1, [gxIxx_oov, rAxxx_ovo, uAIxx_vo])
    update_code!(func, ein"klc,kcj,bl->bj", 1//1, [gxIxx_oov, rAxxx_ovo, uAIxx_vo])
    update_code!(func, ein"klc,bcj,kl->bj", -1//1, [gxIxx_oov, rxIxx_vvo, tAxAx_oo])
    update_code!(func, ein"klc,bjc,kl->bj", 2//1, [gxIxx_oov, rxxxI_vov, tAxAx_oo])
    update_code!(func, ein"klc,bkc,jl->bj", -1//1, [gxIxx_oov, rxxxI_vov, tAxAx_oo])
    update_code!(func, ein"klc,blc,jk->bj", -1//1, [gxIxx_oov, rxxxI_vov, tAxAx_oo])
    finalize_eT_function(func, "construct_triples_into_singles_transformation_2", "doublet_ccsd")
end

println(io, s)
end
